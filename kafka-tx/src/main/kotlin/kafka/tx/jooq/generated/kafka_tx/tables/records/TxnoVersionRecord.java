/*
 * This file is generated by jOOQ.
 */
package kafka.tx.jooq.generated.kafka_tx.tables.records;


import kafka.tx.jooq.generated.kafka_tx.tables.TxnoVersion;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TxnoVersionRecord extends UpdatableRecordImpl<TxnoVersionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>kafka-tx.txno_version.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>kafka-tx.txno_version.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>kafka-tx.txno_version.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>kafka-tx.txno_version.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TxnoVersionRecord
     */
    public TxnoVersionRecord() {
        super(TxnoVersion.TXNO_VERSION);
    }

    /**
     * Create a detached, initialised TxnoVersionRecord
     */
    public TxnoVersionRecord(Integer id, Integer version) {
        super(TxnoVersion.TXNO_VERSION);

        setId(id);
        setVersion(version);
        resetTouchedOnNotNull();
    }
}
