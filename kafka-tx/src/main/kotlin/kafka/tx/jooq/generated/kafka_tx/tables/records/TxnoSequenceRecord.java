/*
 * This file is generated by jOOQ.
 */
package kafka.tx.jooq.generated.kafka_tx.tables.records;


import kafka.tx.jooq.generated.kafka_tx.tables.TxnoSequence;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TxnoSequenceRecord extends UpdatableRecordImpl<TxnoSequenceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>kafka-tx.txno_sequence.topic</code>.
     */
    public void setTopic(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>kafka-tx.txno_sequence.topic</code>.
     */
    public String getTopic() {
        return (String) get(0);
    }

    /**
     * Setter for <code>kafka-tx.txno_sequence.seq</code>.
     */
    public void setSeq(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>kafka-tx.txno_sequence.seq</code>.
     */
    public Long getSeq() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TxnoSequenceRecord
     */
    public TxnoSequenceRecord() {
        super(TxnoSequence.TXNO_SEQUENCE);
    }

    /**
     * Create a detached, initialised TxnoSequenceRecord
     */
    public TxnoSequenceRecord(String topic, Long seq) {
        super(TxnoSequence.TXNO_SEQUENCE);

        setTopic(topic);
        setSeq(seq);
        resetTouchedOnNotNull();
    }
}
